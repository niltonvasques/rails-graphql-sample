server {
  listen 80;
  server_name ${HOST_URL};
  rewrite ^/(.*) https://${HOST_URL}/$1 permanent;
}
server {
  listen   443 ssl;
  server_name ${HOST_URL};
  ssl_certificate /etc/nginx/ssl/nginx.crt;
  ssl_certificate_key /etc/nginx/ssl/nginx.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:RSA+3DES:AES128-SHA:!ADH:!AECDH:!MD5;

  access_log  /var/log/nginx/access.log;

  root /home/app/pms-rails/public;
  
  # Max allowed upload size
  client_max_body_size 10M;

  # Serve compreessed assets, improves browser caching and enables CORS to avoid restrict policy
  # in some assets, when serving through a CDN
  location ~ ^/(assets|fonts)/ {
    gzip_static on;
    # Since amazon access using http 1.0 this line is needed
    # http://www.nomitor.com/blog/2010/11/10/gzip-support-for-amazon-web-services-cloudfront/
    gzip_http_version 1.0;

    # Make better use from browser caching feature
    expires 1y;
    add_header Cache-Control public;

    # added configuration for CORS for font assets
    add_header 'Access-Control-Allow-Origin' "*"; # Found a more restrict policy for CORS
    add_header 'Access-Control-Allow-Credentials' 'true'; # only needed for SSL
    add_header 'Access-Control-Allow-Methods' 'GET, HEAD';
    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With';
  }

  # The following deploys your Ruby/Python/Node.js/Meteor app on Passenger.

  # Not familiar with Passenger, and used (G)Unicorn/Thin/Puma/pure Node before?
  # Yes, this is all you need to deploy on Passenger! All the reverse proxying,
  # socket setup, process management, etc are all taken care automatically for
  # you! Learn more at https://www.phusionpassenger.com/.
  passenger_enabled on;
  passenger_user app;

  # If this is a Ruby app, specify a Ruby version:
  passenger_ruby /usr/bin/ruby2.3;
}

